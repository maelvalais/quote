syntax = "proto3";

package user;

option go_package = ".;user";

message Name {
  string first = 1; // "Brianna"
  string last = 2;  // "Shelton"
}

message User {
  string id = 1; // "5cfdf218090eae728f3ebf2d",
  int32 age = 2; // 27
  Name name = 3;
  string email = 4;   //  "brianna.shelton@email.org",
  string phone = 5;   //  "+1 (814) 482-3880",
  string address = 6; //  "255 Cortelyou Road, Volta, Indiana, 1608"
}

// User service creates and searches users.
service UserService {
  rpc Create(CreateReq) returns(CreateResp);
  rpc List(ListReq) returns(SearchResp);
  rpc GetByEmail(GetByEmailReq) returns(GetByEmailResp);
  // Searches in a wildcard-way in first-name and last-name.
  rpc SearchName(SearchNameReq) returns(SearchResp);
  rpc SearchAge(SearchAgeReq) returns(SearchResp);
}

message ListReq {}

message GetByEmailReq { string email = 1; }
message GetByEmailResp {
  Status status = 1;
  User user = 2;
}

message CreateReq { User user = 1; }
message CreateResp {
  Status status = 1;
  User user = 2;
}

message SearchAgeReq {
  message AgeRange {
    int32 from = 1;
    int32 to_included = 2;
  }
  AgeRange ageRange = 1;
}

message SearchNameReq { string query = 1; }

message SearchResp {
  Status status = 1;
  repeated User users = 2;
}

// A status message that is included to each response.
message Status {
  enum StatusCode {
    FAILED = 0; NO_IMPL_YET = 1; INVALID_QUERY = 2; PARTIAL_SUCCESS = 3;
    SUCCESS = 4;
    READMSG = 5;
  }

  StatusCode code = 1;
  string msg = 2;
}
